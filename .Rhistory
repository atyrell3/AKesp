authors = "Erin Fedewa, Kalei Shotwell, Brian Garber Yonts",
year = 2022,
fish = "Red King Crab",
region = "Bristol Bay",
render_ref = FALSE)
dat <- get_esp_data("St. Matthew Blue King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
render_esp(esp_type = "report_card",
out_dir = here::here("play/smbkc_2022"),
out_name = "smbkc_2022_rc.docx",
esp_data = dat,
authors = "Erin Fedewa, Kalei Shotwell, Brian Garber Yonts",
year = 2022,
fish = "Blue King Crab",
region = "Saint Matthew Island",
render_ref = FALSE)
dat <- get_esp_data("BS Snow Crab") %>%
check_data()
#use to filter out a data source if getting double entries
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "National Snow and Ice Data Center Sea Ice")
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
render_esp(esp_type = "report_card",
out_dir = here::here("play/snow_2022"),
out_name = "snow_2022_rc.docx",
esp_data = dat,
authors = "Erin Fedewa, Kalei Shotwell, Brian Garber Yonts",
year = 2022,
fish = "Snow Crab",
region = "Eastern Bering Sea",
render_ref = FALSE)
dat <- get_esp_data("Bristol Bay Red King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
#use to filter out one year in particular
dat <- dat %>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Active_Vessels_BBRKC_Fishery" & YEAR==2021))
unique(dat$INDICATOR_NAME)
View(dat)
View(dat)
View(dat)
dat <- dat %>%
dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
View(dat)
dat <- dat %>%
dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")
dat <- get_esp_data("Bristol Bay Red King Crab") %>%
check_data()
dat <- dat %>%
dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")
View(dat)
indicator_order <- read.csv(here::here("data-raw/ESP_Lookup_Order.csv"))
usethis::use_data(indicator_order, overwrite = TRUE)
roxygen2::roxygenise()
devtools::load_all()
dat <- dat %>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Active_Vessels_BBRKC_Fishery" & YEAR==2021))
dat <- get_esp_data("Bristol Bay Red King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- dat %>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Active_Vessels_BBRKC_Fishery" & YEAR==2021))
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey"))
unique(dat$INDICATOR_NAME)
View(dat)
dat <- dat %>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Active_Vessels_BBRKC_Fishery" & YEAR==2021))%>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey"))
unique(dat$INDICATOR_NAME)
dat <- dat %>%
dplyr::recode(dat$INDICATOR_NAME,
"Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model" = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
?recode
dat1 <- dat %>%
dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")
View(dat1)
dat1 <- dat %>%
#dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")%>%
dplyr::recode(dat$INDICATOR_NAME,
"Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model" = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
dat1 <- dat %>%
#dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")%>%
dplyr::recode(dat$INDICATOR_NAME,
Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
dat1 <- dat %>%
#dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")%>%
dplyr::rename("Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model" = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
dat1 <- dat %>%
#dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")%>%
dplyr::recode(INDICATOR_NAME,
"Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model" = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey")
dat1 <- dat %>%
#dplyr::filter(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model")%>%
dplyr::mutate(INDICATOR_NAME=recode(INDICATOR_NAME,
"Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model" = "Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey"))
dat <- get_esp_data("BS Snow Crab") %>%
check_data()
View(dat)
dat <- get_esp_data("Bristol Bay Red King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- dat %>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Active_Vessels_BBRKC_Fishery" & YEAR==2021))%>%
dplyr::filter(!(INDICATOR_NAME=="Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey"))
unique(dat$INDICATOR_NAME)
dat["INDICATOR_NAME"][dat["INDICATOR_NAME"]=="Annual_Red_King_Crab_Recruit_Biomass_BBRKC_Model"]<-"Annual_Red_King_Crab_Recruit_Abundance_BBRKC_Survey"
unique(dat$INDICATOR_NAME)
View(dat)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
indicator_order <- read.csv(here::here("data-raw/ESP_Lookup_Order.csv"))
usethis::use_data(indicator_order, overwrite = TRUE)
roxygen2::roxygenise()
devtools::load_all()
# a generic table ----
esp_traffic_tab(data = dat, year = 2017:2022)
dat <- get_esp_data("St. Matthew Blue King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
render_esp(esp_type = "report_card",
out_dir = here::here("play/smbkc_2022"),
out_name = "smbkc_2022_rc.docx",
esp_data = dat,
authors = "Erin Fedewa, Kalei Shotwell, Brian Garber Yonts",
year = 2022,
fish = "Blue King Crab",
region = "Saint Matthew Island",
render_ref = FALSE)
dat <- get_esp_data("BS Snow Crab") %>%
check_data()
#use to filter out a data source if getting double entries
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "National Snow and Ice Data Center Sea Ice")
unique(dat$INDICATOR_NAME)
View(dat)
unique(dat$REPORT_CARD_TITLE)
dat <- get_esp_data("BS Snow Crab") %>%
check_data()
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "National Snow and Ice Data Center Sea Ice")
unique(dat$INDICATOR_NAME)
unique(dat$REPORT_CARD_TITLE)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
render_esp(esp_type = "report_card",
out_dir = here::here("play/snow_2022"),
out_name = "snow_2022_rc.docx",
esp_data = dat,
authors = "Erin Fedewa, Kalei Shotwell, Brian Garber Yonts",
year = 2022,
fish = "Snow Crab",
region = "Eastern Bering Sea",
render_ref = FALSE)
View(dat1)
View(dat1)
devtools::load_all()
`%>%` <- magrittr::`%>%`
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("GOA Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
View(dat)
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("GOA Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
class(dat)
write.csv(dat,"C:\\Users\\kalei.shotwell\\Downloads\\ESP\\MODEL\\2022\\sablefish22.csv",row.names=FALSE)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
write.csv(dat,"C:\\Users\\kalei.shotwell\\Downloads\\ESP\\MODEL\\2022\\goapollock22.csv",row.names=FALSE)
dat <- get_esp_data("GOA Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
write.csv(dat,"C:\\Users\\kalei.shotwell\\Downloads\\ESP\\MODEL\\2022\\goapcod22.csv",row.names=FALSE)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
write.csv(dat,"C:\\Users\\kalei.shotwell\\Downloads\\ESP\\MODEL\\2022\\ebspcod22.csv",row.names=FALSE)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
View(dat)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "Copernicus Marine and Environment Monitoring Service")
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
render_esp(esp_type = "report_card",
out_dir = here::here("play/sablefish_2022"),
out_name = "sablefish_2022_rc.docx",
esp_data = dat,
authors = "Kalei Shotwell",
year = 2022,
fish = "Sablefish",
region = "Alaska",
render_ref = FALSE)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
render_esp(esp_type = "report_card",
out_dir = here::here("play/goapollock_2022"),
out_name = "goapollock_2022_rc.docx",
esp_data = dat,
authors = "Kalei Shotwell",
year = 2022,
fish = "GOA Pollock",
region = "Gulf of Alaska",
render_ref = FALSE)
dat <- get_esp_data("GOA Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
render_esp(esp_type = "report_card",
out_dir = here::here("play/goapcod_2022"),
out_name = "goapcod_2022_rc.docx",
esp_data = dat,
authors = "Kalei Shotwell",
year = 2022,
fish = "GOA Pacific Cod",
region = "Gulf of Alaska",
render_ref = FALSE)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "Copernicus Marine and Environment Monitoring Service")
unique(dat$INDICATOR_NAME)
render_esp(esp_type = "report_card",
out_dir = here::here("play/ebspcod_2022"),
out_name = "ebspcod_2022_rc.docx",
esp_data = dat,
authors = "Kalei Shotwell",
year = 2022,
fish = "EBS Pacific Cod",
region = "Eastern Bering Sea",
render_ref = FALSE)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("EBS Pacific Cod") %>%
check_data()
dat <- dat %>%
dplyr::filter(DATA_SOURCE_NAME != "Copernicus Marine and Environment Monitoring Service")
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("GOA Pacific Cod") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
render_esp(esp_type = "report_card",
out_dir = here::here("play/sablefish_2022"),
out_name = "sablefish_2022_rc.docx",
esp_data = dat,
authors = "Kalei Shotwell",
year = 2022,
fish = "Alaska Sablefish",
region = "Bering Sea Aleutian Islands and Gulf of Alaska",
render_ref = FALSE)
devtools::load_all()
`%>%` <- magrittr::`%>%`
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
library(scales)
my_inc <- 4
httr::content(
httr::GET('https://apex.psmfc.org/akfin/data_marts/akmp/hq_time_series'),
type = "application/json") %>%
bind_rows() %>%
rename_with(tolower) %>%
mutate(stockregion=paste0(stock,"_",region)) %>%
ggplot(aes(x=fisheryyear, y=totalcatch))+
geom_line()+
facet_wrap(~stockregion)
get_sara_data <- function(region,stock) {
base_url<-"https://apex.psmfc.org/akfin/data_marts/akmp/hq_time_series?"
#base_url <- "https://apex.psmfc.org/akfin/data_marts/akmp/esp_indicators?intended_esp="
region_url<- paste0("region=",region)
stock_url <- paste0("&stock=",stock) %>%
stringr::str_replace_all(" ", "%20")
url <- paste0(base_url, region_url, stock_url)
data <- httr::content(httr::GET(url),
type = "application/json"
) %>%
dplyr::bind_rows()
return(data)
}
get_sara_data("GOA","ATF")
dat <- get_sara_data()
get_sara_alldata <- function() {
base_url<-"https://apex.psmfc.org/akfin/data_marts/akmp/hq_time_series?"
#base_url <- "https://apex.psmfc.org/akfin/data_marts/akmp/esp_indicators?intended_esp="
#region_url<- paste0("region=",region)
#stock_url <- paste0("&stock=",stock) %>%
stringr::str_replace_all(" ", "%20")
url <- paste0(base_url)
data <- httr::content(httr::GET(url),
type = "application/json"
) %>%
dplyr::bind_rows()
return(data)
}
dat <- get_sara_alldata()
get_sara_alldata <- function() {
url<-"https://apex.psmfc.org/akfin/data_marts/akmp/hq_time_series?"
#base_url <- "https://apex.psmfc.org/akfin/data_marts/akmp/esp_indicators?intended_esp="
#region_url<- paste0("region=",region)
#stock_url <- paste0("&stock=",stock) %>%
#  stringr::str_replace_all(" ", "%20")
#url <- paste0(base_url)
data <- httr::content(httr::GET(url),
type = "application/json"
) %>%
dplyr::bind_rows()
return(data)
}
dat <- get_sara_alldata()
dat
View(dat)
#m2<-merge(mod_stats,mod_stock,all.x=TRUE)
#m2<-merge(m2,sara_stock,all.x=TRUE)
#m2<-merge(m2,sarastocknames,all.x=TRUE)
m2==dat
#m2<-merge(mod_stats,mod_stock,all.x=TRUE)
#m2<-merge(m2,sara_stock,all.x=TRUE)
#m2<-merge(m2,sarastocknames,all.x=TRUE)
m2<-dat
### Set up some stuff for recruitment graphs
m3<-m2[!is.na(m2$RECRUITMENT),]
m3<-m3[m3$FISHERYYEAR>1976,]
m3<-m3 %>%
mutate(STOCKJOIN = STOCK+REGION+ASMT_YEAR)
View(dat)
s=ATF
s<-ATF
s<-"ATF"
b<-"GOA"
paste0(s+b)
paste0("s"+"b")
m3<-m3 %>%
mutate(m3$STOCKJOIN = paste0(m3$STOCK+m3$REGION+m3$ASMT_YEAR))
paste0(m3$STOCK+m3$REGION+m3$ASMT_YEAR)
m3<-m3 %>%
unite('STOCKJOIN' = c(STOCK+REGION+ASMT_YEAR))
m3<-m3 %>%
unite(STOCKJOIN = c(STOCK+REGION+ASMT_YEAR))
m3<-m3 %>%
unite(STOCKJOIN = c(STOCK,REGION,ASMT_YEAR))
m3$STOCKJOIN <- paste(m3$STOCK,m3$REGION,m3$ASMT_YEAR)
m3
m3$STOCKJOIN <- paste0(m3$STOCK,m3$REGION,m3$ASMT_YEAR)
m3
by.type <- group_by(m3, STOCKJOIN)
d <- summarise(by.type, num.types = n(), mu = mean(RECRUITMENT,na.rm=T),sd=sd(RECRUITMENT,na.rm=T))
e<-merge(by.type,d)
f<- group_by(e,STOCKJOIN)%>%mutate(Anomaly=(RECRUITMENT-mu)/sd)
#e
g<-f
g$cola<-"neg"
#g$Anomaly[1]<-0.001
g[g$Anomaly>0,]$cola<-"pos"
g$cola<-factor(g$cola)
getwd()
stocks<-unique(m3$STOCKJOIN)
stocks
path<-getwd()
plotpath<-paste0(path,"/saraplots")
if (file.exists(plotpath)){
setwd(plotpath)} else {
dir.create(plotpath)
setwd(plotpath)}
plotpath<-paste0(path,"/plots/single")
if (file.exists(plotpath)){
setwd(plotpath)} else {
dir.create(plotpath)
setwd(plotpath)}
plotpath<-paste0(path,"/plots/single")
if (file.exists(plotpath)){
setwd(plotpath)} else {
dir.create(plotpath)
setwd(plotpath)}
plotpath<-paste0(path,"/saraplots/single")
if (file.exists(plotpath)){
setwd(plotpath)} else {
dir.create(plotpath)
setwd(plotpath)}
get_sara_alldata <- function() {
url<-"https://apex.psmfc.org/akfin/data_marts/akmp/hq_time_series?"
#base_url <- "https://apex.psmfc.org/akfin/data_marts/akmp/esp_indicators?intended_esp="
#region_url<- paste0("region=",region)
#stock_url <- paste0("&stock=",stock) %>%
#  stringr::str_replace_all(" ", "%20")
#url <- paste0(base_url)
data <- httr::content(httr::GET(url),
type = "application/json"
) %>%
dplyr::bind_rows()
return(data)
}
dat <- get_sara_alldata()
dat
View(dat)
unique(dat$STOCK)
dat <- get_sara_alldata()
unique(dat$STOCK)
dat <- get_sara_alldata()
unique(dat$STOCK)
dat <- get_sara_alldata()
unique(dat$STOCK)
unique(dat$STOCK_NAME)
dat <- get_sara_alldata()
unique(dat$STOCK_NAME)
dat <- get_sara_alldata()
unique(dat$STOCK_NAME)
dat <- get_sara_alldata()
unique(dat$STOCK_NAME)
dat <- get_sara_alldata()
unique(dat$STOCK_NAME)
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
devtools::load_all()
`%>%` <- magrittr::`%>%`
dat <- get_esp_data("GOA Pollock") %>%
check_data()
unique(dat$INDICATOR_NAME)
devtools::load_all()
`%>%` <- magrittr::`%>%`
install.packages(c("flextable", "ggplot2", "ggcorrplot", "ggforce", "ggnewscale", "ggpubr", "rmarkdown", "scales", "tidyr"))
# load package ----
devtools::load_all()
rm(list = c("%>%"))
dat <- get_esp_data("Alaska sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("Bristol Bay Red King Crab") %>%
check_data()
unique(dat$INDICATOR_NAME)
dat <- get_esp_data("Alaska Sablefish") %>%
check_data()
unique(dat$INDICATOR_NAME)
# a generic figure ----
esp_traffic(dat, paginate = TRUE)
